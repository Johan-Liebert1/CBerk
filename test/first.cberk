include "../examples/include/std.cberk"

def PROT_READ_PROT_WRITE: int = 3;
def MAP_PRIVATE_MAP_ANONYMOUS: int = 34;

fun string_ends_with(string: *char, string_len: int, substr: *char, substr_len: int) -> int {
    if substr_len > string_len {
        return 0;
    }

    def idx_into_str: int = string_len - 1;
    def idx_into_substr: int = substr_len - 1;

    loop {
        def str_char: *char = string + idx_into_str;
        def substr_char: *char = substr + idx_into_substr;

        if *str_char != *substr_char {
            return 0;
        }

        idx_into_str -= 1;
        idx_into_substr -= 1;

        if idx_into_substr < 0 {
            break;
        }
    }

    return 1;
}

fun main() {
    def string: str = "index.html";
    def subs: str = "html";
    write(string_starts_with(string as *char, strlen(&string), subs as *char, strlen(&subs)))

    string = "first second third";
    subs = "third";
    write(string_starts_with(string as *char, strlen(&string), subs as *char, strlen(&subs)))
}

fun main2() {
    def hel: str = "hello_world\0";
    def capital_a: int8 = 65;

    def addr: int = syscall(MMAP_SYSCALL, 0, 1024, PROT_READ_PROT_WRITE, MAP_PRIVATE_MAP_ANONYMOUS, -1, 0);

    write("mmap ret = ")
    print_int(addr)

    def address: *int8 = addr as *int8;
    def addr_1: *int8 = address + 1;
    def addr_2: *int8 = address + 2;
    def addr_4: *int8 = address + 4;
    def addr_3: *int8 = address + 3;

    *address = 65;
    *addr_1 = 65;
    *addr_2 = 65;
    *addr_3 = 65;
    *addr_4 = 10;
               
    def write_ret: int = syscall(WRITE_SYSCALL, STDOUT, addr, 5)
    write("write ret = ")
    print_int(write_ret)
}

main()
